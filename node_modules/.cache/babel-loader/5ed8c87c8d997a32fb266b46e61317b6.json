{"ast":null,"code":"var _jsxFileName = \"D:\\\\jiangren assignment\\\\weather\\\\weather-demo\\\\src\\\\header.js\";\nimport React from 'react';\nimport './App.css';\nimport imgURL from './../src/logo.png';\nimport Nav from './nav';\nimport Condition from './condition';\nimport Forecast from './forecast';\nimport Footer from './footer';\nimport axios from 'axios';\nimport { format } from 'date-fns';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: []\n    };\n  }\n\n  componentDidMount() {\n    axios('https://jr-weather-api.herokuapp.com/api/weather?cc=au&city=brisbane').then(response => {\n      console.log(response);\n      const forecasts = response.data.data.forecast.slice(0, 10).map(forecast => {\n        const date = new Date(forecast.time * 1000);\n        const day = format(date, 'EEE');\n        const time = format(date, 'HH:mm');\n        return {\n          day,\n          time,\n          high: forecast.maxCelsius,\n          low: forecast.minCelsius\n        };\n      }); //forecasts:forecasts (第一个forecasts是上面的空array)\n\n      this.setState({\n        forecasts\n      });\n    });\n  }\n\n  render() {\n    const header = \"Weather Channel\";\n    return React.createElement(\"div\", {\n      className: \"weather-channel__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"header__logo\",\n      src: imgURL,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, header)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Condition, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Forecast, {\n      forecasts: this.state.forecasts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["D:\\jiangren assignment\\weather\\weather-demo\\src\\header.js"],"names":["React","imgURL","Nav","Condition","Forecast","Footer","axios","format","Header","Component","constructor","props","state","forecasts","componentDidMount","then","response","console","log","data","forecast","slice","map","date","Date","time","day","high","maxCelsius","low","minCelsius","setState","render","header"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,UAArB;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfR,IAAAA,KAAK,CAAC,sEAAD,CAAL,CACCS,IADD,CACMC,QAAQ,IAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMH,SAAS,GAAGG,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,QAAnB,CAA4BC,KAA5B,CAAkC,CAAlC,EAAoC,EAApC,EAAwCC,GAAxC,CAA4CF,QAAQ,IAAG;AACrE,cAAMG,IAAI,GAAG,IAAIC,IAAJ,CAASJ,QAAQ,CAACK,IAAT,GAAc,IAAvB,CAAb;AACA,cAAMC,GAAG,GAAGnB,MAAM,CAACgB,IAAD,EAAO,KAAP,CAAlB;AACA,cAAME,IAAI,GAAGlB,MAAM,CAACgB,IAAD,EAAO,OAAP,CAAnB;AAEA,eAAM;AACFG,UAAAA,GADE;AAEFD,UAAAA,IAFE;AAGFE,UAAAA,IAAI,EAACP,QAAQ,CAACQ,UAHZ;AAIFC,UAAAA,GAAG,EAACT,QAAQ,CAACU;AAJX,SAAN;AAMH,OAXiB,CAAlB,CAFY,CAcZ;;AACA,WAAKC,QAAL,CAAc;AAAClB,QAAAA;AAAD,OAAd;AACH,KAjBD;AAkBH;;AAEDmB,EAAAA,MAAM,GAAE;AACJ,UAAMC,MAAM,GAAG,iBAAf;AACA,WACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEhC,MAAnC;AAA2C,MAAA,GAAG,EAAC,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCgC,MAAhC,CAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdJ,CADJ;AAoBH;;AAnD+B;;AAsDpC,eAAeL,MAAf","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport imgURL from './../src/logo.png';\r\nimport Nav from './nav';\r\nimport Condition from './condition';\r\nimport Forecast from './forecast';\r\nimport Footer from './footer';\r\nimport axios from 'axios';\r\nimport {format} from 'date-fns';\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            forecasts :[],\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios('https://jr-weather-api.herokuapp.com/api/weather?cc=au&city=brisbane')\r\n        .then(response=>{\r\n            console.log(response)\r\n            const forecasts = response.data.data.forecast.slice(0,10).map(forecast =>{\r\n                const date = new Date(forecast.time*1000);\r\n                const day = format(date, 'EEE');\r\n                const time = format(date, 'HH:mm');\r\n\r\n                return{\r\n                    day,\r\n                    time,\r\n                    high:forecast.maxCelsius,\r\n                    low:forecast.minCelsius\r\n                }\r\n            });\r\n            //forecasts:forecasts (第一个forecasts是上面的空array)\r\n            this.setState({forecasts})\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const header = \"Weather Channel\";\r\n        return (\r\n            <div className=\"weather-channel__container\">\r\n                <header>\r\n                    <img className=\"header__logo\" src={imgURL} alt=\"\" />\r\n                    <div className=\"header__title\">{header}</div>\r\n                </header>\r\n                <div>\r\n                    <Nav />\r\n                </div>\r\n                <div>\r\n                    <Condition />\r\n                </div>\r\n                <div>\r\n                    <Forecast forecasts={this.state.forecasts}/>\r\n                </div>\r\n                <div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}