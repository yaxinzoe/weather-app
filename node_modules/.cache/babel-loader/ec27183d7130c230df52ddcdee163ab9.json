{"ast":null,"code":"var _jsxFileName = \"D:\\\\jiangren assignment\\\\weather\\\\weather-demo\\\\src\\\\forecast.js\";\nimport React from 'react';\nimport './App.css';\nimport ForecastTwo from './forecastTwo';\nimport axios from 'axios';\nimport { format } from 'date-fns'; // class Forecast extends React.Component{\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             clocks:['10:00','13:00','16:00']\n//         }\n//     }\n//     // handleClock(i){\n//     //     const clocks = [...this.state.clocks];\n//     //     clocks[i] = ['10:00']\n//     //     this.setState({clocks});\n//     // }\n//     renderClocks=(index)=>{\n//         return <ForecastTwo content={this.state.clocks[index]} />\n//     }\n//     render(){\n//         const itemOne=\"5 items\";\n//         const itemTwo=\"10 items\";\n//         return(\n//             <section className=\"weather-forecast\">\n//                 <div className=\"forecast__switch\">\n//                     <button className=\"forecast__switch_0 switch-active\">{itemOne}</button>\n//                     <button className=\"forecast__switch_1\">{itemTwo}</button>\n//                 </div>\n//                 <div>\n//                     {this.renderClocks(0)}\n//                 </div>\n//                 <div>\n//                     {this.renderClocks(1)}\n//                 </div>\n//                 <div>\n//                     {this.renderClocks(2)}\n//                 </div>\n//             </section>\n//         )\n//     }\n// }\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: []\n    };\n  } //fetch data\n\n\n  componentDidMount() {\n    axios('https://jr-weather-api.herokuapp.com/api/weather?cc=au&city=brisbane').then(response => {\n      console.log(response);\n      const forecasts = response.data.data.forecast.slice(0, 10).map(forecast => {\n        const date = new Date(forecasts.time * 1000);\n        const day = format(date, 'EEE');\n        const time = format(date, 'HH:mm');\n        return {\n          day,\n          time,\n          high: forecasts.maxCelsius,\n          low: forecasts.minCelsius\n        };\n      }); //forecasts:forecasts (第一个forecasts是上面的空array)\n\n      this.setState({\n        forecasts\n      });\n    });\n  } // handleClock(i){\n  //     const clocks = [...this.state.clocks];\n  //     clocks[i] = ['10:00']\n  //     this.setState({clocks});\n  // }\n  // renderClocks=(index)=>{\n  //     return <ForecastTwo content={this.state.clocks[index]} />\n  // }\n\n\n  render() {\n    const itemOne = \"5 items\";\n    const itemTwo = \"10 items\";\n    return React.createElement(\"section\", {\n      className: \"weather-forecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"forecast__switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"forecast__switch_0 switch-active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, itemOne), React.createElement(\"button\", {\n      className: \"forecast__switch_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, itemTwo)), this.state.forecasts.map(forecast => React.createElement(ForecastTwo, {\n      key: forecast.day + forecast.time,\n      day: forecast.day,\n      high: forecast.high,\n      low: forecast.low,\n      time: forecast.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Forecast;","map":{"version":3,"sources":["D:\\jiangren assignment\\weather\\weather-demo\\src\\forecast.js"],"names":["React","ForecastTwo","axios","format","Forecast","Component","constructor","props","state","forecasts","componentDidMount","then","response","console","log","data","forecast","slice","map","date","Date","time","day","high","maxCelsius","low","minCelsius","setState","render","itemOne","itemTwo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,UAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH,GANiC,CAQlC;;;AACAC,EAAAA,iBAAiB,GAAE;AACfR,IAAAA,KAAK,CAAC,sEAAD,CAAL,CACCS,IADD,CACMC,QAAQ,IAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMH,SAAS,GAAGG,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,QAAnB,CAA4BC,KAA5B,CAAkC,CAAlC,EAAoC,EAApC,EAAwCC,GAAxC,CAA4CF,QAAQ,IAAG;AACrE,cAAMG,IAAI,GAAG,IAAIC,IAAJ,CAASX,SAAS,CAACY,IAAV,GAAe,IAAxB,CAAb;AACA,cAAMC,GAAG,GAAGnB,MAAM,CAACgB,IAAD,EAAO,KAAP,CAAlB;AACA,cAAME,IAAI,GAAGlB,MAAM,CAACgB,IAAD,EAAO,OAAP,CAAnB;AAEA,eAAM;AACFG,UAAAA,GADE;AAEFD,UAAAA,IAFE;AAGFE,UAAAA,IAAI,EAACd,SAAS,CAACe,UAHb;AAIFC,UAAAA,GAAG,EAAChB,SAAS,CAACiB;AAJZ,SAAN;AAMH,OAXiB,CAAlB,CAFY,CAcZ;;AACA,WAAKC,QAAL,CAAc;AAAClB,QAAAA;AAAD,OAAd;AACH,KAjBD;AAkBH,GA5BiC,CA8BlC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAmB,EAAAA,MAAM,GAAE;AACJ,UAAMC,OAAO,GAAC,SAAd;AACA,UAAMC,OAAO,GAAC,UAAd;AAEA,WACI;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,kCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDD,OAAtD,CADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCC,OAAxC,CAFJ,CADJ,EAcK,KAAKtB,KAAL,CAAWC,SAAX,CAAqBS,GAArB,CAAyBF,QAAQ,IAC9B,oBAAC,WAAD;AACA,MAAA,GAAG,EAAEA,QAAQ,CAACM,GAAT,GAAeN,QAAQ,CAACK,IAD7B;AAEA,MAAA,GAAG,EAAEL,QAAQ,CAACM,GAFd;AAGA,MAAA,IAAI,EAAEN,QAAQ,CAACO,IAHf;AAIA,MAAA,GAAG,EAAEP,QAAQ,CAACS,GAJd;AAKA,MAAA,IAAI,EAAET,QAAQ,CAACK,IALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAdL,CADJ;AA0BH;;AAtEiC;;AA0EtC,eAAejB,QAAf","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport ForecastTwo from './forecastTwo';\r\nimport axios from 'axios';\r\nimport {format} from 'date-fns';\r\n// class Forecast extends React.Component{\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             clocks:['10:00','13:00','16:00']\r\n//         }\r\n//     }\r\n\r\n//     // handleClock(i){\r\n//     //     const clocks = [...this.state.clocks];\r\n//     //     clocks[i] = ['10:00']\r\n//     //     this.setState({clocks});\r\n//     // }\r\n\r\n//     renderClocks=(index)=>{\r\n//         return <ForecastTwo content={this.state.clocks[index]} />\r\n//     }\r\n\r\n//     render(){\r\n//         const itemOne=\"5 items\";\r\n//         const itemTwo=\"10 items\";\r\n\r\n//         return(\r\n//             <section className=\"weather-forecast\">\r\n//                 <div className=\"forecast__switch\">\r\n//                     <button className=\"forecast__switch_0 switch-active\">{itemOne}</button>\r\n//                     <button className=\"forecast__switch_1\">{itemTwo}</button>\r\n//                 </div>\r\n//                 <div>\r\n//                     {this.renderClocks(0)}\r\n//                 </div>\r\n//                 <div>\r\n//                     {this.renderClocks(1)}\r\n//                 </div>\r\n//                 <div>\r\n//                     {this.renderClocks(2)}\r\n//                 </div>\r\n//             </section>\r\n//         )\r\n//     }\r\n// }\r\nclass Forecast extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            forecasts :[],\r\n        }\r\n    }\r\n\r\n    //fetch data\r\n    componentDidMount(){\r\n        axios('https://jr-weather-api.herokuapp.com/api/weather?cc=au&city=brisbane')\r\n        .then(response=>{\r\n            console.log(response)\r\n            const forecasts = response.data.data.forecast.slice(0,10).map(forecast =>{\r\n                const date = new Date(forecasts.time*1000);\r\n                const day = format(date, 'EEE');\r\n                const time = format(date, 'HH:mm');\r\n\r\n                return{\r\n                    day,\r\n                    time,\r\n                    high:forecasts.maxCelsius,\r\n                    low:forecasts.minCelsius\r\n                }\r\n            });\r\n            //forecasts:forecasts (第一个forecasts是上面的空array)\r\n            this.setState({forecasts})\r\n        });\r\n    }\r\n\r\n    // handleClock(i){\r\n    //     const clocks = [...this.state.clocks];\r\n    //     clocks[i] = ['10:00']\r\n    //     this.setState({clocks});\r\n    // }\r\n\r\n    // renderClocks=(index)=>{\r\n    //     return <ForecastTwo content={this.state.clocks[index]} />\r\n    // }\r\n\r\n    render(){\r\n        const itemOne=\"5 items\";\r\n        const itemTwo=\"10 items\";\r\n\r\n        return(\r\n            <section className=\"weather-forecast\">\r\n                <div className=\"forecast__switch\">\r\n                    <button className=\"forecast__switch_0 switch-active\">{itemOne}</button>\r\n                    <button className=\"forecast__switch_1\">{itemTwo}</button>\r\n                </div>\r\n                {/* <div>\r\n                    {this.renderClocks(0)}\r\n                </div>\r\n                <div>\r\n                    {this.renderClocks(1)}\r\n                </div>\r\n                <div>\r\n                    {this.renderClocks(2)}\r\n                </div> */}\r\n                {this.state.forecasts.map(forecast =>(\r\n                    <ForecastTwo\r\n                    key={forecast.day + forecast.time}\r\n                    day={forecast.day}\r\n                    high={forecast.high}\r\n                    low={forecast.low}\r\n                    time={forecast.time}\r\n                    />\r\n                ))}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}